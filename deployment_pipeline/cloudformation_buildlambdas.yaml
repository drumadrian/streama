AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Use this template to deploy an AWS Lambda function the calls a transcoder convert the uploaded video file to the right format. 
  

Parameters:

  zipfilebucket:
    Type: String
    Description: Enter the bucket containing the zip file for Elasticsearch transcoder
    Default: streama-transcoder

  zipfilekey:
    Type: String
    Description: Enter zip file name in the bucket with the lambda code to be deployed. 
    Default: transcoder.zip



Resources:





  transcoderRoleLambda:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub "${AWS::StackName}-transcoderRole"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Effect: Allow
                Resource: 'arn:aws:logs:*:*:*'
              - Effect: Allow
                Action:
                  - 'es:*'
                  - 'ec2:*'
                  - 'sns:*'
                Resource: '*'
          PolicyName: !Sub "${AWS::StackName}-transcoderPolicyLambda"


  transcoderLambda:
    Type: 'AWS::Lambda::Function'
    Properties:
      Code:
        S3Bucket: !Ref zipfilebucket
        S3Key: !Ref zipfilekey
      Environment:
        Variables:
          zipfilebucket: !Ref zipfilebucket
          transcoderjob: 'please_set_me'
      FunctionName: !Sub "${AWS::StackName}-transcoderLambda"
      Handler: index.lambda_handler
      Role: !GetAtt 
        - transcoderRoleLambda
        - Arn
      Runtime: python3.6
      Timeout: '900'


  
  CreatetranscoderAssumeRolePolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      ManagedPolicyName: !Sub "${AWS::StackName}-ManagedPolicyName"
      Description: Policy for creating transcoder-controller-ec2-policy
      Path: /
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 'sts:AssumeRole'
            Resource: 'arn:aws:iam::*'
          - Effect: Allow
            Action:
              - 'elastictranscoder:*'
              - 's3:List*'
              - 's3:Get*'
              - 's3:PutObject'
              - 's3:DeleteObject'
            Resource: '*'
      Roles:
        - !Ref transcoderRoleLambda
      # Users:
      #   - !Ref HAControllerLambdaUser


  transcoderSNSTopic: 
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub "${AWS::StackName}-transcoderSNSTopic"
      # Subscription:
      #   - Endpoint: !Ref Email
      #     Protocol: email



  # ScheduledRule: 
  #   Type: AWS::Events::Rule
  #   Properties: 
  #     Description: "AWS Elasticsearch transcoder ScheduledRule"
  #     ScheduleExpression: "rate(7 days)"
  #     State: "ENABLED"
  #     Targets: 
  #       - 
  #         Arn: 
  #           Fn::GetAtt: 
  #             - "transcoderLambda"
  #             - "Arn"
  #         Id: "TargetFunctionV1"


  PermissionForEventsToInvokeLambda: 
    Type: AWS::Lambda::Permission
    Properties: 
      FunctionName: 
        Ref: "transcoderLambda"
      Action: "lambda:InvokeFunction"
      Principal: "s3.amazonaws.com"
      # Principal: "events.amazonaws.com"
      SourceAccount: !Ref 'AWS::AccountId'
      # SourceArn: 
      #   Fn::GetAtt: 
      #     - "ScheduledRule"
      #     - "Arn"


Outputs:

  AccountId:
    Description: Amazon Account ID
    Value: !Ref 'AWS::AccountId'



