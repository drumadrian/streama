AWSTemplateFormatVersion: "2010-09-09"

Description: >
  This template builds an AWS CodePipeline pipeline that implements a continuous delivery release
  process. This is the build pipeline for the development of a private video system. 
  Project site:       

Parameters: 
  Email:
    Description: The email address where CodePipeline sends pipeline notifications
    Type: String

  RepositoryNameApp:
    Description: A name for the codecommit repo
    Type: String
    Default: "repo"

  ArtifactStoreBucketName:
    Description: A name for the Deployment Artifact S3 bucket
    Type: String
    Default: "bucket"

  BranchName:
    Description: A name for the codecommit repo Branch
    Type: String
    Default: "master"

  IDName:
    Description: A name for the Deployment Secret ID 
    Type: String
    Default: "PROJECT_NAME-deployment-pipeline-id-$COMMIT_BRANCH"

  SecretName:
    Description: A name for the Deployment Secret 
    Type: String
    Default: "$PROJECT_NAME-deployment-pipeline-secret-$COMMIT_BRANCH"

  # GitHubOwner:
  #   Description: Owner of the GitHub repo
  #   Type: String
  #   Default: "drumadrian"

  # GitHubRepo:
  #   Description: The name of the GitHub repo
  #   Type: String
  #   Default: "drumadrian"

  # GitHubToken:
  #   Description: The OAUTH token from GitHub
  #   Type: String
  #   Default: "drumadrian"

  # GitHubUrl:
  #   Description: The URL to the Git Repository
  #   Type: String
  #   Default: "drumadrian"


Resources:

  SSMstacknameparameter:
    Type: "AWS::SSM::Parameter"
    Properties: 
      Description: This is the stackname to be used in AWS CodeBuild pipeline
      Name: !Sub "${AWS::StackName}-${BranchName}"
      Type: String
      Value: !Sub "${AWS::StackName}"


  ArtifactStoreBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref ArtifactStoreBucketName      
      VersioningConfiguration:
        Status: Enabled


  cleanupBucketOnDelete:
    DependsOn: cleanupBucketOnDeleteLambda
    Type: Custom::cleanupbucket
    Properties:
      ServiceToken: 
       Fn::GetAtt: 
          - "cleanupBucketOnDeleteLambda"
          - "Arn"
      BucketName: !Ref ArtifactStoreBucketName


  cleanupBucketOnDeleteLambda:
    DependsOn: ArtifactStoreBucket
    Type: "AWS::Lambda::Function"
    Properties:
      Code:
        ZipFile: !Sub |
          #!/usr/bin/env python
          # -*- coding: utf-8 -*-

          import json
          import boto3
          from botocore.vendored import requests

          def empty_delete_buckets(bucket_name):
              """
              Empties and deletes the bucket
              :param bucket_name:
              :param region:
              :return:
              """
              print "trying to delete the bucket {0}".format(bucket_name)
              # s3_client = SESSION.client('s3', region_name=region)
              s3_client = boto3.client('s3')
              # s3 = SESSION.resource('s3', region_name=region)
              s3 = boto3.resource('s3')

              try:
                  bucket = s3.Bucket(bucket_name).load()
              except ClientError:
                  print "bucket {0} does not exist".format(bucket_name)
                  return
              # Check if versioning is enabled
              response = s3_client.get_bucket_versioning(Bucket=bucket_name)
              status = response.get('Status','')
              if status == 'Enabled':
                  response = s3_client.put_bucket_versioning(Bucket=bucket_name,
                                                             VersioningConfiguration={'Status': 'Suspended'})
              paginator = s3_client.get_paginator('list_object_versions')
              page_iterator = paginator.paginate(
                  Bucket=bucket_name
              )

              for page in page_iterator:
                  print page
                  if 'DeleteMarkers' in page:
                      delete_markers = page['DeleteMarkers']
                      if delete_markers is not None:
                          for delete_marker in delete_markers:
                              key = delete_marker['Key']
                              versionId = delete_marker['VersionId']
                              s3_client.delete_object(Bucket=bucket_name, Key=key, VersionId=versionId)
                  if 'Versions' in page and page['Versions'] is not None:
                      versions = page['Versions']
                      for version in versions:
                          print version
                          key = version['Key']
                          versionId = version['VersionId']
                          s3_client.delete_object(Bucket=bucket_name, Key=key, VersionId=versionId)
              object_paginator = s3_client.get_paginator('list_objects_v2')
              page_iterator = object_paginator.paginate(
                  Bucket=bucket_name
              )
              for page in page_iterator:
                  if 'Contents' in page:
                      for content in page['Contents']:
                          key = content['Key']
                          s3_client.delete_object(Bucket=bucket_name, Key=content['Key'])
              #UNCOMMENT THE LINE BELOW TO MAKE LAMBDA DELETE THE BUCKET.  
              # THIS WILL CAUSE AN FAILURE SINCE CLOUDFORMATION ALSO TRIES TO DELETE THE BUCKET
              #s3_client.delete_bucket(Bucket=bucket_name)
              #print "Successfully deleted the bucket {0}".format(bucket_name)
              print "Successfully emptied the bucket {0}".format(bucket_name)



          def lambda_handler(event, context):
              try:
                  bucket = event['ResourceProperties']['BucketName']
                  if event['RequestType'] == 'Delete':
                      empty_delete_buckets(bucket)
                      #s3 = boto3.resource('s3')
                      #bucket.objects.all().delete()
                      #bucket = s3.Bucket(bucket)
                      #for obj in bucket.objects.filter():
                          #s3.Object(bucket.name, obj.key).delete()
                  sendResponseCfn(event, context, "SUCCESS")
              except Exception as e:
                  print(e)
                  sendResponseCfn(event, context, "FAILED")

          def sendResponseCfn(event, context, responseStatus):
              response_body = {'Status': responseStatus,
                               'Reason': 'Log stream name: ' + context.log_stream_name,
                               'PhysicalResourceId': context.log_stream_name,
                               'StackId': event['StackId'],
                               'RequestId': event['RequestId'],
                               'LogicalResourceId': event['LogicalResourceId'],
                               'Data': json.loads("{}")}
              requests.put(event['ResponseURL'], data=json.dumps(response_body))


      Description: cleanup Bucket on Delete Lambda Lambda function.
      # FunctionName: lambda_function
      Handler: index.lambda_handler
      Role : !GetAtt cleanupBucketOnDeleteLambdaRole.Arn
      Runtime: python2.7
      Timeout: 60


  cleanupBucketOnDeleteLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: !Join [ -, [!Ref 'AWS::StackName', 'cleanupBucketOnDeleteLambdaPolicy'] ]
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:*
            - s3:*
            Resource: '*'
          - Effect: Deny
            Action:
            - s3:DeleteBucket
            Resource: '*'


  coderepo:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: !Ref RepositoryNameApp
      RepositoryDescription: "This repository holds the code that AWS CodePipeline will use to deploy."
      Triggers:
      - Name: MasterTrigger
        CustomData: no custom data
        DestinationArn:
          Ref: CodePipelineSNSTopic
        Branches:
        - Master
        Events:
        - all


  CodePipelineSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: !Ref Email
          Protocol: email


  CodePipelineSNSTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      Topics:
        - !Ref CodePipelineSNSTopic 
      PolicyDocument:
        Id: Id1
        Version: '2012-10-17'
        Statement:
        - Sid: StatementID1
          Effect: Allow
          Principal:
            Service:
            - 'events.amazonaws.com' # Allow CloudWatch Events
            - 'budgets.amazonaws.com' # Allow Budget Notifications
            - 'rds.amazonaws.com' # Allow RDS Events
            - 's3.amazonaws.com' # Allow S3 Event Notifications
            - 'lambda.amazonaws.com' # Allow S3 Event Notifications
          Action: 'sns:Publish'
          Resource: !Ref CodePipelineSNSTopic
        - Sid: Sid2
          Effect: Allow
          Principal:
            AWS: '*' # Allow CloudWatch Alarms, ElastiCache Notifications, Elastic Beanstalk Notifications, Auto Scaling Notification
          Action: 'sns:Publish'
          Resource: !Ref CodePipelineSNSTopic
          Condition:
            StringEquals:
              'AWS:SourceOwner': !Ref 'AWS::AccountId'


  SourceEvent:
    Properties:
      Description: Rule for Amazon CloudWatch Events to detect changes to the source repository and trigger pipeline execution
      EventPattern:
        source:
        - aws.codecommit
        detail:
          event:
          - referenceCreated
          - referenceUpdated
          referenceName:
          - !Ref BranchName
          referenceType:
          - branch
        detail-type:
        - CodeCommit Repository State Change
        resources:
        - !GetAtt 'coderepo.Arn'
      Name: !Sub "${AWS::StackName}-SourceEvent"
      State: ENABLED
      Targets: 
        - Arn: !Join
          - ':'
          - - arn
            - aws
            - codepipeline
            - !Ref 'AWS::Region'
            - !Ref 'AWS::AccountId'
            - !Sub "${AWS::StackName}"
          Id: ProjectPipelineTarget
          RoleArn: !GetAtt 'CodeCloudWatchRole.Arn'
    Type: AWS::Events::Rule

  CodeCloudWatchRole:
    Description: IAM role to allow Amazon CloudWatch Events to trigger AWS CodePipeline execution
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - events.amazonaws.com
          Sid: 1
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - codepipeline:StartPipelineExecution
            Effect: Allow
            Resource:
              - !Join
                - ':'
                - - arn
                  - aws
                  - codepipeline
                  - !Ref 'AWS::Region'
                  - !Ref 'AWS::AccountId'
                  - !Ref 'AWS::StackName'
        PolicyName: !Join [ -, [!Ref 'AWS::StackName', 'CodeCloudWatchPolicy'] ]
      RoleName: !Sub "${AWS::StackName}-Role"
    Type: AWS::IAM::Role

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [codebuild.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: !Sub "${AWS::StackName}-CodeBuildAccess"
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - 'logs:*'
                - 'ec2:*'
                - 's3:*'
                - 'iam:*'
                - 'ssm:*'
                - 'cloudformation:*'
                - 'ssm:*'
                - 'lambda:*'
                - 'config:*'
                - 'kms:*'
                - 'ds:*'
                - 'es:*'
                - 'route53:*'
                - 'cognito-identity:*'
                - 'cognito-idp:*'
                - 'cloud9:*'
                Effect: Allow
                Resource: '*'
        
  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [codepipeline.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: !Sub "${AWS::StackName}-CodePipelineAccess"
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - 's3:*'
                - 'cloudformation:CreateStack'
                - 'cloudformation:DescribeStacks'
                - 'cloudformation:DeleteStack'
                - 'cloudformation:UpdateStack'
                - 'cloudformation:CreateChangeSet'
                - 'cloudformation:ExecuteChangeSet'
                - 'cloudformation:DeleteChangeSet'
                - 'cloudformation:DescribeChangeSet'
                - 'cloudformation:SetStackPolicy'
                - 'iam:PassRole'
                - 'sns:Publish'
                - 'codecommit:*'
                - 'codebuild:*'
                Effect: Allow
                Resource: '*'




############################################################################################################
#  BEGIN CodePipeline Definition
############################################################################################################





  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref 'ArtifactStoreBucket'
        Type: S3
      DisableInboundStageTransitions: []
      Name: !Sub "${AWS::StackName}"
      RoleArn: !GetAtt [PipelineRole, Arn]
      Stages:

        - Name: Fetch_Source
          Actions:
            - Name: SourceCode
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: '1'
              Configuration:
                BranchName: !Ref BranchName 
                PollForSourceChanges: false
                RepositoryName: !Join [ -, [!Ref 'AWS::StackName', 'repo'] ]
              OutputArtifacts:
                - Name: code
              RunOrder: '1'

        - Name: Build_Network
          Actions:
            - Name: Build_VPC
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: code
              Configuration:
                ProjectName: !Join [ -, [!Ref 'AWS::StackName', 'buildvpc'] ]
              RunOrder: '1'
              OutputArtifacts:
                - Name: output-buildvpc

        - Name: Create_AMI_Pipeline
          Actions:
            - Name: Create_AMI_Pipeline
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: code
              Configuration:
                ProjectName: !Join [ -, [!Ref 'AWS::StackName', 'createamipipeline'] ]
              RunOrder: '1'
              OutputArtifacts:
                - Name: output-createamipipeline


        - Name: Create_Database_Create_S3_Buckets_Create_Cognito_Pool_Create_Load_Balancer
          Actions:
            - Name: Create_Database
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: code
              Configuration:
                ProjectName: !Join [ -, [!Ref 'AWS::StackName', 'createdatabase'] ]
              RunOrder: '1'
              OutputArtifacts:
                - Name: output-createdatabase

            - Name: Create_S3_Buckets
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: code
              Configuration:
                ProjectName: !Join [ -, [!Ref 'AWS::StackName', 'creates3buckets'] ]
              RunOrder: '1'
              OutputArtifacts:
                - Name: output-creates3buckets

            - Name: Create_Cognito_Pool
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: code
              Configuration:
                ProjectName: !Join [ -, [!Ref 'AWS::StackName', 'createcognitopool'] ]
              RunOrder: '1'
              OutputArtifacts:
                - Name: output-createcognitopool

            - Name: Create_Load_Balancer
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: code
              Configuration:
                ProjectName: !Join [ -, [!Ref 'AWS::StackName', 'createloadbalancer'] ]
              RunOrder: '1'
              OutputArtifacts:
                - Name: output-createloadbalancer

        - Name: Build_Lambdas_Create_Transcoder
          Actions:
            - Name: Build_Lambdas
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: code
              Configuration:
                ProjectName: !Join [ -, [!Ref 'AWS::StackName', 'buildlambdas'] ]
              RunOrder: '1'
              OutputArtifacts:
                - Name: output-buildlambdas

            - Name: Create_Transcoder
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: code
              Configuration:
                ProjectName: !Join [ -, [!Ref 'AWS::StackName', 'createtranscoder'] ]
              RunOrder: '1'
              OutputArtifacts:
                - Name: output-createtranscoder

############################################################################################################
#  END CodePipeline Definition
############################################################################################################







  CodeBuildProjectCredentials:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Join [ -, [!Ref 'AWS::StackName', 'createamipipeline'] ]
      ServiceRole: !Ref CodeBuildRole
      Artifacts:
        Type: CODEPIPELINE
      BadgeEnabled: false
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/python:3.6.5
        EnvironmentVariables:
          - Name: codecommithttpsname
            Value: !GetAtt coderepo.Name
            Type: PLAINTEXT
          - Name: codecommithttpsurl
            Value: !GetAtt coderepo.CloneUrlHttp
            Type: PLAINTEXT
          - Name: codecommithttpsurlSSM
            Value: !Sub "${AWS::StackName}-coderepoURL"
            Type: PARAMETER_STORE
          - Name: codepipelinesnstopicarn
            Value: !Ref CodePipelineSNSTopic
            Type: PLAINTEXT
          - Name: codepipelinebranchname
            Value: !Ref BranchName
            Type: PLAINTEXT
          - Name: idname
            Value: !Ref IDName
            Type: PARAMETER_STORE
          - Name: secretidname
            Value: !Ref SecretName
            Type: PARAMETER_STORE
          - Name: deploymentartifactstorebucketname
            Value: !Join [ -, [!Ref 'AWS::StackName', 'artifactstorebucket'] ]
            Type: PLAINTEXT
      Source:
        BuildSpec: deployment_pipeline/buildspec_createamipipeline.yaml
        GitCloneDepth: 0
        Type: CODEPIPELINE
      TimeoutInMinutes: 30




  CodeBuildProjectbuildvpc:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Join [ -, [!Ref 'AWS::StackName', 'buildvpc'] ]
      ServiceRole: !Ref CodeBuildRole
      Artifacts:
        Type: CODEPIPELINE
      BadgeEnabled: false
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/python:3.6.5
        EnvironmentVariables:
          - Name: codecommithttpsname
            Value: !GetAtt coderepo.Name
            Type: PLAINTEXT
          - Name: codecommithttpsurl
            Value: !GetAtt coderepo.CloneUrlHttp
            Type: PLAINTEXT
          - Name: codecommithttpsurlSSM
            Value: !Sub "${AWS::StackName}-coderepoURL"
            Type: PARAMETER_STORE
          - Name: codepipelinesnstopicarn
            Value: !Ref CodePipelineSNSTopic
            Type: PLAINTEXT
          - Name: codepipelinebranchname
            Value: !Ref BranchName
            Type: PLAINTEXT
          - Name: idname
            Value: !Ref IDName
            Type: PARAMETER_STORE
          - Name: secretidname
            Value: !Ref SecretName
            Type: PARAMETER_STORE
          - Name: deploymentartifactstorebucketname
            Value: !Join [ -, [!Ref 'AWS::StackName', 'artifactstorebucket'] ]
            Type: PLAINTEXT
      Source:
        BuildSpec: deployment_pipeline/buildspec_buildvpc.yaml
        GitCloneDepth: 0
        Type: CODEPIPELINE
      TimeoutInMinutes: 10







  CodeBuildProjectcreatedatabase:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Join [ -, [!Ref 'AWS::StackName', 'createdatabase'] ]
      ServiceRole: !Ref CodeBuildRole
      Artifacts:
        Type: CODEPIPELINE
      BadgeEnabled: false
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/python:3.6.5
        EnvironmentVariables:
          - Name: codecommithttpsname
            Value: !GetAtt coderepo.Name
            Type: PLAINTEXT
          - Name: codecommithttpsurl
            Value: !GetAtt coderepo.CloneUrlHttp
            Type: PLAINTEXT
          - Name: codecommithttpsurlSSM
            Value: !Sub "${AWS::StackName}-coderepoURL"
            Type: PARAMETER_STORE
          - Name: codepipelinesnstopicarn
            Value: !Ref CodePipelineSNSTopic
            Type: PLAINTEXT
          - Name: codepipelinebranchname
            Value: !Ref BranchName
            Type: PLAINTEXT
          - Name: idname
            Value: !Ref IDName
            Type: PARAMETER_STORE
          - Name: secretidname
            Value: !Ref SecretName
            Type: PARAMETER_STORE
          - Name: deploymentartifactstorebucketname
            Value: !Join [ -, [!Ref 'AWS::StackName', 'artifactstorebucket'] ]
            Type: PLAINTEXT
      Source:
        BuildSpec: deployment_pipeline/buildspec_createdatabase.yaml
        GitCloneDepth: 0
        Type: CODEPIPELINE
      TimeoutInMinutes: 10






  CodeBuildProjectcreates3buckets:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Join [ -, [!Ref 'AWS::StackName', 'creates3buckets'] ]
      ServiceRole: !Ref CodeBuildRole
      Artifacts:
        Type: CODEPIPELINE
      BadgeEnabled: false
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/python:3.6.5
        EnvironmentVariables:
          - Name: codecommithttpsname
            Value: !GetAtt coderepo.Name
            Type: PLAINTEXT
          - Name: codecommithttpsurl
            Value: !GetAtt coderepo.CloneUrlHttp
            Type: PLAINTEXT
          - Name: codecommithttpsurlSSM
            Value: !Sub "${AWS::StackName}-coderepoURL"
            Type: PARAMETER_STORE
          - Name: codepipelinesnstopicarn
            Value: !Ref CodePipelineSNSTopic
            Type: PLAINTEXT
          - Name: codepipelinebranchname
            Value: !Ref BranchName
            Type: PLAINTEXT
          - Name: idname
            Value: !Ref IDName
            Type: PARAMETER_STORE
          - Name: secretidname
            Value: !Ref SecretName
            Type: PARAMETER_STORE
          - Name: deploymentartifactstorebucketname
            Value: !Join [ -, [!Ref 'AWS::StackName', 'artifactstorebucket'] ]
            Type: PLAINTEXT
      Source:
        BuildSpec: deployment_pipeline/buildspec_creates3buckets.yaml
        GitCloneDepth: 0
        Type: CODEPIPELINE
      TimeoutInMinutes: 10





  CodeBuildProjectcreatecognitopool:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Join [ -, [!Ref 'AWS::StackName', 'createcognitopool'] ]
      ServiceRole: !Ref CodeBuildRole
      Artifacts:
        Type: CODEPIPELINE
      BadgeEnabled: false
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/python:3.6.5
        EnvironmentVariables:
          - Name: codecommithttpsname
            Value: !GetAtt coderepo.Name
            Type: PLAINTEXT
          - Name: codecommithttpsurl
            Value: !GetAtt coderepo.CloneUrlHttp
            Type: PLAINTEXT
          - Name: codecommithttpsurlSSM
            Value: !Sub "${AWS::StackName}-coderepoURL"
            Type: PARAMETER_STORE
          - Name: codepipelinesnstopicarn
            Value: !Ref CodePipelineSNSTopic
            Type: PLAINTEXT
          - Name: codepipelinebranchname
            Value: !Ref BranchName
            Type: PLAINTEXT
          - Name: idname
            Value: !Ref IDName
            Type: PARAMETER_STORE
          - Name: secretidname
            Value: !Ref SecretName
            Type: PARAMETER_STORE
          - Name: deploymentartifactstorebucketname
            Value: !Join [ -, [!Ref 'AWS::StackName', 'artifactstorebucket'] ]
            Type: PLAINTEXT
      Source:
        BuildSpec: deployment_pipeline/buildspec_createcognitopool.yaml
        GitCloneDepth: 0
        Type: CODEPIPELINE
      TimeoutInMinutes: 10





  CodeBuildProjectcreateloadbalancer:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Join [ -, [!Ref 'AWS::StackName', 'createloadbalancer'] ]
      ServiceRole: !Ref CodeBuildRole
      Artifacts:
        Type: CODEPIPELINE
      BadgeEnabled: false
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/python:3.6.5
        EnvironmentVariables:
          - Name: codecommithttpsname
            Value: !GetAtt coderepo.Name
            Type: PLAINTEXT
          - Name: codecommithttpsurl
            Value: !GetAtt coderepo.CloneUrlHttp
            Type: PLAINTEXT
          - Name: codecommithttpsurlSSM
            Value: !Sub "${AWS::StackName}-coderepoURL"
            Type: PARAMETER_STORE
          - Name: codepipelinesnstopicarn
            Value: !Ref CodePipelineSNSTopic
            Type: PLAINTEXT
          - Name: codepipelinebranchname
            Value: !Ref BranchName
            Type: PLAINTEXT
          - Name: idname
            Value: !Ref IDName
            Type: PARAMETER_STORE
          - Name: secretidname
            Value: !Ref SecretName
            Type: PARAMETER_STORE
          - Name: deploymentartifactstorebucketname
            Value: !Join [ -, [!Ref 'AWS::StackName', 'artifactstorebucket'] ]
            Type: PLAINTEXT
      Source:
        BuildSpec: deployment_pipeline/buildspec_createloadbalancer.yaml
        GitCloneDepth: 0
        Type: CODEPIPELINE
      TimeoutInMinutes: 10





  CodeBuildProjectbuildlambdas:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Join [ -, [!Ref 'AWS::StackName', 'buildlambdas'] ]
      ServiceRole: !Ref CodeBuildRole
      Artifacts:
        Type: CODEPIPELINE
      BadgeEnabled: false
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/python:3.6.5
        EnvironmentVariables:
          - Name: codecommithttpsname
            Value: !GetAtt coderepo.Name
            Type: PLAINTEXT
          - Name: codecommithttpsurl
            Value: !GetAtt coderepo.CloneUrlHttp
            Type: PLAINTEXT
          - Name: codecommithttpsurlSSM
            Value: !Sub "${AWS::StackName}-coderepoURL"
            Type: PARAMETER_STORE
          - Name: codepipelinesnstopicarn
            Value: !Ref CodePipelineSNSTopic
            Type: PLAINTEXT
          - Name: codepipelinebranchname
            Value: !Ref BranchName
            Type: PLAINTEXT
          - Name: idname
            Value: !Ref IDName
            Type: PARAMETER_STORE
          - Name: secretidname
            Value: !Ref SecretName
            Type: PARAMETER_STORE
          - Name: deploymentartifactstorebucketname
            Value: !Join [ -, [!Ref 'AWS::StackName', 'artifactstorebucket'] ]
            Type: PLAINTEXT
      Source:
        BuildSpec: deployment_pipeline/buildspec_buildlambdas.yaml
        GitCloneDepth: 0
        Type: CODEPIPELINE
      TimeoutInMinutes: 10





  CodeBuildProjectcreatetranscoder:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Join [ -, [!Ref 'AWS::StackName', 'createtranscoder'] ]
      ServiceRole: !Ref CodeBuildRole
      Artifacts:
        Type: CODEPIPELINE
      BadgeEnabled: false
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/python:3.6.5
        EnvironmentVariables:
          - Name: codecommithttpsname
            Value: !GetAtt coderepo.Name
            Type: PLAINTEXT
          - Name: codecommithttpsurl
            Value: !GetAtt coderepo.CloneUrlHttp
            Type: PLAINTEXT
          - Name: codecommithttpsurlSSM
            Value: !Sub "${AWS::StackName}-coderepoURL"
            Type: PARAMETER_STORE
          - Name: codepipelinesnstopicarn
            Value: !Ref CodePipelineSNSTopic
            Type: PLAINTEXT
          - Name: codepipelinebranchname
            Value: !Ref BranchName
            Type: PLAINTEXT
          - Name: idname
            Value: !Ref IDName
            Type: PARAMETER_STORE
          - Name: secretidname
            Value: !Ref SecretName
            Type: PARAMETER_STORE
          - Name: deploymentartifactstorebucketname
            Value: !Join [ -, [!Ref 'AWS::StackName', 'artifactstorebucket'] ]
            Type: PLAINTEXT
      Source:
        BuildSpec: deployment_pipeline/buildspec_createtranscoder.yaml
        GitCloneDepth: 0
        Type: CODEPIPELINE
      TimeoutInMinutes: 10





  # CodeBuildProjectvpc:
  #   Type: AWS::CodeBuild::Project
  #   Properties:
  #     Name: !Join [ -, [!Ref 'AWS::StackName', 'build-VPC'] ]
  #     ServiceRole: !Ref CodeBuildRole
  #     Artifacts:
  #       Type: CODEPIPELINE
  #     BadgeEnabled: false
  #     Environment:
  #       Type: LINUX_CONTAINER
  #       ComputeType: BUILD_GENERAL1_SMALL
  #       Image: aws/codebuild/python:3.6.5
  #       EnvironmentVariables:
  #         - Name: codecommithttpsname
  #           Value: !GetAtt coderepo.Name
  #           Type: PLAINTEXT
  #         - Name: codecommithttpsurl
  #           Value: !GetAtt coderepo.CloneUrlHttp
  #           Type: PLAINTEXT
  #         - Name: codecommithttpsurlSSM
  #           Value: !Sub "${AWS::StackName}-coderepoURL"
  #           Type: PARAMETER_STORE
  #         - Name: codepipelinesnstopicarn
  #           Value: !Ref CodePipelineSNSTopic
  #           Type: PLAINTEXT
  #         - Name: codepipelinebranchname
  #           Value: !Ref BranchName
  #           Type: PLAINTEXT
  #         - Name: idname
  #           Value: !Ref IDName
  #           Type: PARAMETER_STORE
  #         - Name: secretidname
  #           Value: !Ref SecretName
  #           Type: PARAMETER_STORE
  #         - Name: deploymentartifactstorebucketname
  #           Value: !Join [ -, [!Ref 'AWS::StackName', 'artifactstorebucket'] ]
  #           Type: PLAINTEXT
  #     Source:
  #       BuildSpec: parent_aws_account_management_tools/deployment_pipeline/buildspec_vpc.yml
  #       GitCloneDepth: 0
  #       Type: CODEPIPELINE
  #     TimeoutInMinutes: 10



  # CodeBuildProjectLaunchActiveDirectory:
  #   Type: AWS::CodeBuild::Project
  #   Properties:
  #     Name: !Join [ -, [!Ref 'AWS::StackName', 'activedirectorydomain'] ]
  #     ServiceRole: !Ref CodeBuildRole
  #     Artifacts:
  #       Type: CODEPIPELINE
  #     BadgeEnabled: false
  #     Environment:
  #       Type: LINUX_CONTAINER
  #       ComputeType: BUILD_GENERAL1_SMALL
  #       Image: aws/codebuild/python:3.6.5
  #       EnvironmentVariables:
  #         - Name: codecommithttpsname
  #           Value: !GetAtt coderepo.Name
  #           Type: PLAINTEXT
  #         - Name: codecommithttpsurl
  #           Value: !GetAtt coderepo.CloneUrlHttp
  #           Type: PLAINTEXT
  #         - Name: codecommithttpsurlSSM
  #           Value: !Sub "${AWS::StackName}-coderepoURL"
  #           Type: PARAMETER_STORE
  #         - Name: codepipelinesnstopicarn
  #           Value: !Ref CodePipelineSNSTopic
  #           Type: PLAINTEXT
  #         - Name: codepipelinebranchname
  #           Value: !Ref BranchName
  #           Type: PLAINTEXT
  #         - Name: idname
  #           Value: !Ref IDName
  #           Type: PARAMETER_STORE
  #         - Name: secretidname
  #           Value: !Ref SecretName
  #           Type: PARAMETER_STORE
  #         - Name: deploymentartifactstorebucketname
  #           Value: !Join [ -, [!Ref 'AWS::StackName', 'artifactstorebucket'] ]
  #           Type: PLAINTEXT
  #     Source:
  #       BuildSpec: parent_aws_account_management_tools/deployment_pipeline/buildspec_activedirectory_domain.yml
  #       GitCloneDepth: 0
  #       Type: CODEPIPELINE
  #     TimeoutInMinutes: 25


  # CodeBuildProjectElasticSearch:
  #   Type: AWS::CodeBuild::Project
  #   Properties:
  #     Name: !Join [ -, [!Ref 'AWS::StackName', 'ElasticSearch'] ]
  #     ServiceRole: !Ref CodeBuildRole
  #     Artifacts:
  #       Type: CODEPIPELINE
  #     BadgeEnabled: false
  #     Environment:
  #       Type: LINUX_CONTAINER
  #       ComputeType: BUILD_GENERAL1_SMALL
  #       Image: aws/codebuild/python:3.6.5
  #       EnvironmentVariables:
  #         - Name: codecommithttpsname
  #           Value: !GetAtt coderepo.Name
  #           Type: PLAINTEXT
  #         - Name: codecommithttpsurl
  #           Value: !GetAtt coderepo.CloneUrlHttp
  #           Type: PLAINTEXT
  #         - Name: codecommithttpsurlSSM
  #           Value: !Sub "${AWS::StackName}-coderepoURL"
  #           Type: PARAMETER_STORE
  #         - Name: codepipelinesnstopicarn
  #           Value: !Ref CodePipelineSNSTopic
  #           Type: PLAINTEXT
  #         - Name: codepipelinebranchname
  #           Value: !Ref BranchName
  #           Type: PLAINTEXT
  #         - Name: idname
  #           Value: !Ref IDName
  #           Type: PARAMETER_STORE
  #         - Name: secretidname
  #           Value: !Ref SecretName
  #           Type: PARAMETER_STORE
  #         - Name: deploymentartifactstorebucketname
  #           Value: !Join [ -, [!Ref 'AWS::StackName', 'artifactstorebucket'] ]
  #           Type: PLAINTEXT
  #     Source:
  #       BuildSpec: parent_aws_account_management_tools/deployment_pipeline/buildspec_elasticsearch.yml
  #       GitCloneDepth: 0
  #       Type: CODEPIPELINE
  #     TimeoutInMinutes: 20


  # CodeBuildProjectCognito:
  #   Type: AWS::CodeBuild::Project
  #   Properties:
  #     Name: !Join [ -, [!Ref 'AWS::StackName', 'Cognito'] ]
  #     ServiceRole: !Ref CodeBuildRole
  #     Artifacts:
  #       Type: CODEPIPELINE
  #     BadgeEnabled: false
  #     Environment:
  #       Type: LINUX_CONTAINER
  #       ComputeType: BUILD_GENERAL1_SMALL
  #       Image: aws/codebuild/python:3.6.5
  #       EnvironmentVariables:
  #         - Name: codecommithttpsname
  #           Value: !GetAtt coderepo.Name
  #           Type: PLAINTEXT
  #         - Name: codecommithttpsurl
  #           Value: !GetAtt coderepo.CloneUrlHttp
  #           Type: PLAINTEXT
  #         - Name: codecommithttpsurlSSM
  #           Value: !Sub "${AWS::StackName}-coderepoURL"
  #           Type: PARAMETER_STORE
  #         - Name: codepipelinesnstopicarn
  #           Value: !Ref CodePipelineSNSTopic
  #           Type: PLAINTEXT
  #         - Name: codepipelinebranchname
  #           Value: !Ref BranchName
  #           Type: PLAINTEXT
  #         - Name: idname
  #           Value: !Ref IDName
  #           Type: PARAMETER_STORE
  #         - Name: secretidname
  #           Value: !Ref SecretName
  #           Type: PARAMETER_STORE
  #         - Name: deploymentartifactstorebucketname
  #           Value: !Join [ -, [!Ref 'AWS::StackName', 'artifactstorebucket'] ]
  #           Type: PLAINTEXT
  #     Source:
  #       BuildSpec: parent_aws_account_management_tools/deployment_pipeline/buildspec_cognito.yml
  #       GitCloneDepth: 0
  #       Type: CODEPIPELINE
  #     TimeoutInMinutes: 20


  # CodeBuildProjectCreateAudio:
  #   Type: AWS::CodeBuild::Project
  #   Properties:
  #     Name: !Join [ -, [!Ref 'AWS::StackName', 'create_audio'] ]
  #     ServiceRole: !Ref CodeBuildRole
  #     Artifacts:
  #       Type: CODEPIPELINE
  #     BadgeEnabled: false
  #     Environment:
  #       Type: LINUX_CONTAINER
  #       ComputeType: BUILD_GENERAL1_SMALL
  #       Image: aws/codebuild/python:3.6.5
  #       EnvironmentVariables:
  #         - Name: codecommithttpsname
  #           Value: !GetAtt coderepo.Name
  #           Type: PLAINTEXT
  #         - Name: codecommithttpsurl
  #           Value: !GetAtt coderepo.CloneUrlHttp
  #           Type: PLAINTEXT
  #         - Name: codecommithttpsurlSSM
  #           Value: !Sub "${AWS::StackName}-coderepoURL"
  #           Type: PARAMETER_STORE
  #         - Name: codepipelinesnstopicarn
  #           Value: !Ref CodePipelineSNSTopic
  #           Type: PLAINTEXT
  #         - Name: codepipelinebranchname
  #           Value: !Ref BranchName
  #           Type: PLAINTEXT
  #         - Name: idname
  #           Value: !Ref IDName
  #           Type: PARAMETER_STORE
  #         - Name: secretidname
  #           Value: !Ref SecretName
  #           Type: PARAMETER_STORE
  #         - Name: deploymentartifactstorebucketname
  #           Value: !Join [ -, [!Ref 'AWS::StackName', 'artifactstorebucket'] ]
  #           Type: PLAINTEXT
  #     Source:
  #       BuildSpec: deployment_pipeline/buildspec_create_audio.yml
  #       GitCloneDepth: 0
  #       Type: CODEPIPELINE
  #     TimeoutInMinutes: 17









  # CodeBuildProjectAutomatedTests:
  #   Type: AWS::CodeBuild::Project
  #   Properties:
  #     Name: !Join [ -, [!Ref 'AWS::StackName', 'start_automated_tests'] ]
  #     ServiceRole: !Ref CodeBuildRole
  #     Artifacts:
  #       Type: CODEPIPELINE
  #     BadgeEnabled: false
  #     Environment:
  #       Type: LINUX_CONTAINER
  #       ComputeType: BUILD_GENERAL1_SMALL
  #       Image: aws/codebuild/python:3.6.5
  #       EnvironmentVariables:
  #         - Name: codecommithttpsname
  #           Value: !GetAtt coderepo.Name
  #           Type: PLAINTEXT
  #         - Name: codecommithttpsurl
  #           Value: !GetAtt coderepo.CloneUrlHttp
  #           Type: PLAINTEXT
  #         - Name: codecommithttpsurlSSM
  #           Value: !Sub "${AWS::StackName}-coderepoURL"
  #           Type: PARAMETER_STORE
  #         - Name: codepipelinesnstopicarn
  #           Value: !Ref CodePipelineSNSTopic
  #           Type: PLAINTEXT
  #         - Name: codepipelinebranchname
  #           Value: !Ref BranchName
  #           Type: PLAINTEXT
  #         - Name: idname
  #           Value: !Ref IDName
  #           Type: PARAMETER_STORE
  #         - Name: secretidname
  #           Value: !Ref SecretName
  #           Type: PARAMETER_STORE
  #         - Name: deploymentartifactstorebucketname
  #           Value: !Join [ -, [!Ref 'AWS::StackName', 'artifactstorebucket'] ]
  #           Type: PLAINTEXT
  #     Source:
  #       BuildSpec: parent_aws_account_management_tools/deployment_pipeline/buildspec_start_automated_tests.yml
  #       GitCloneDepth: 0
  #       Type: CODEPIPELINE
  #     TimeoutInMinutes: 17














############################################################################################################
############################################################################################################






  SSMparametercodebranchname:
    Type: "AWS::SSM::Parameter"
    Properties: 
      Description: The branch name of the code from the AWS CodeCommit Repository
      Name: !Sub "${AWS::StackName}-SSMparametercodebranchname"
      Type: String
      Value: !Ref BranchName


  SSMparametercoderepoURL:
    Type: "AWS::SSM::Parameter"
    Properties: 
      Description: The URL of the AWS CodeCommit Repository
      Name: !Sub "${AWS::StackName}-coderepoURL"
      Type: String
      Value: !GetAtt coderepo.CloneUrlHttp


  SSMparametercodecommitrepositoryname:
    Type: "AWS::SSM::Parameter"
    Properties: 
      Description: The Name of the AWS CodeCommit Repository
      Name: !Sub "${AWS::StackName}-codecommitrepositoryname"
      Type: String
      Value: !GetAtt coderepo.Name

  SSMparameterpipelinename:
    Type: "AWS::SSM::Parameter"
    Properties: 
      Description: The Pipeline name of the build pipeline.  This matches the StackName of the build pipeline stack that creates everything
      Name: !Sub "${AWS::StackName}-stackname"
      Type: String
      Value: !Sub "${AWS::StackName}"

  SSMparametercodeSNStopicName:
    Type: "AWS::SSM::Parameter"
    Properties: 
      Description: The topic name of the shared SNS topic 
      Name: !Sub "${AWS::StackName}-SSMparametercodeSNStopicName"
      Type: String
      Value: !Ref CodePipelineSNSTopic

  SSMparametercodeSNStopicARN:
    Type: "AWS::SSM::Parameter"
    Properties: 
      Description: The topic name of the shared SNS topic 
      Name: !Sub "${AWS::StackName}-SSMparametercodeSNStopicARN"
      Type: String
      Value: !Ref CodePipelineSNSTopic


  SSMparametercodeSNStopicEMAIL:
    Type: "AWS::SSM::Parameter"
    Properties: 
      Description: The topic name of the shared SNS topic 
      Name: !Sub "${AWS::StackName}-SSMparametercodeSNStopicEMAIL"
      Type: String
      Value: !Ref Email





Outputs:

  ArtifactStoreBucket:
    Description: The name of the AWS S3 deployment bucket
    Value: !Ref ArtifactStoreBucket
    Export:
      Name: !Sub "${AWS::StackName}-ArtifactStoreBucket"

  coderepoURL:
    Description: The URL of the AWS CodeCommit Repository
    Value: !GetAtt coderepo.CloneUrlHttp
    Export:
      Name: !Sub "${AWS::StackName}-coderepoURL"

  coderepoName:
    Description: The Name of the AWS CodeCommit Repository
    Value: !GetAtt coderepo.Name
    Export:
      Name: !Sub "${AWS::StackName}-coderepoName"




